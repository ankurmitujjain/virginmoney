
#        This file contains properties used by common antscripts and maps to the current project folder style.
#
#        Please DO NOT change any of the values below without good reason - if you need a different value override it in your local build script
#
#        To use this file you must
#
#             1. create (or edit) a file called C:\Documents and Settings\(user id)\etc\env.build.properties , where (user id) is your network logon id
#
#             2. create an entry for  env.dev.root.dir  - typically this will be c:/dev  .i.e. :-
#                  env.dev.root.dir=c:/dev
#
#             3. add these lines to your build script
#
#                    <property file="${user.home}/etc/env.build.properties" />
#                    <property name="antscripts.dir" value="${env.dev.root.dir}/common/antscripts"/>
#                    <property file="${antscripts.dir}/common.build.properties" />>
#                     <property name="common.library.dir" value="${env.dev.root.dir}/thirdparty/libraries/" />
#                     <property file="${common.library.dir}/common.libraries.properties" />
#
#       NOTE that soime folders are all prefixed by ${basedir} - this resolves ambiguities when the scripts are
#            run in Linux . It was found that some folders were being accesses relative to

debug=true

#assets folders
assets.main.dir=${basedir}/assets

# service layer configuration Setup of source folders
src.dir=${basedir}/src
src.main.dir=${src.dir}/main
src.test.dir=${src.dir}/test
src.generated.dir=${src.dir}/generated

# build folders. Note the distinction between main and test; main is included in the war file build but test is not
build.dir=${basedir}/build
build.main.dir=${build.dir}/main
build.test.dir=${build.dir}/test
build.generated.dir=${build.dir}/generated

# configuration folders for web properties, xsd , xml etc files. Note the distinction between main and test; main is included in the war file build but test is not
web.conf.dir=${basedir}/config
web.conf.main.dir=${web.conf.dir}/main
web.conf.test.dir=${web.conf.dir}/test

# configuration folders for web service properties, xsd , xml etc files. Note the distinction between main and test; main is included in the war file build but test is not
conf.dir=${basedir}/conf
conf.main.dir=${conf.dir}/main
conf.test.dir=${conf.dir}/test

# deployment folder
deploy.dir=${basedir}/deploy

# testresults directory
testresults.dir=${basedir}/testresults

# values for cobertura test results
cobertura.file.name=cobertura.results.ser
cobertura.results.dir=${testresults.dir}/cobertura
cobertura.instrumented.dir=${build.dir}/cobertura
cobertura.datafile=${cobertura.results.dir}/${cobertura.file.name}

# values for fitnesse test results
fitnesse.server.name=dylan.eit.wrl.virginmoney.com
fitnesse.server.port=28080
fitnesse.results.dir=${testresults.dir}/fitnesse

# values for junit test results
junit.results.dir=${testresults.dir}/junit

# Library Directory
src.lib.directory=${basedir}/lib  
  
# values for soapui test results
soapui.results.dir=${testresults.dir}/soapui/reports
soapui.temp.dir=${testresults.dir}/soapui/temp

# values for chdeckstyle test results
checkstyle.results.dir=${testresults.dir}/checkstyle
checkstyle.xml.dir=${checkstyle.results.dir}/xml

# values for qalab results - see comments above for location of env.dev.root.dir
qalab.results.dir=${testresults.dir}/qalab
qalab.dir=${env.dev.root.dir}/qalab
qalab.properties.file=${qalab.dir}/qalab.properties
qalab.datafile=${qalab.dir}/${ant.project.name}-qalab.xml

# dozer debugging
dozer.debug=false
dozer.statistics.enabled=false

# folder for generated javadoc - not checked in to subverison
javadoc.dir=${basedir}/javadoc
javadoc.main.dir=${javadoc.dir}/main
javadoc.test.dir=${javadoc.dir}/test
javadoc.generated.dir=${javadoc.dir}/main

#values for wsimport
allowextension=false

#values for findbugs test results
findbugs.results.dir=${testresults.dir}/findbugs

#Tar creation properties
readme.file=README.txt
deployment-instructions.file=TarDeploymentInstructions.txt
distribution.dir=${basedir}/distribution
distribution.database.dir=${distribution.dir}/database
distribution.include-scripts.dir=${distribution.database.dir}/include-scripts
distribution.jboss.dir=${distribution.dir}/JBoss
distribution.jboss.main.dir=${distribution.jboss.dir}/Main
distribution.jboss.deploy-virgin.dir=${distribution.jboss.main.dir}/deploy-virgin
distribution.jboss.lib-virgin.dir=${distribution.jboss.main.dir}/lib-virgin
distribution.jboss.conf.dir=${distribution.jboss.main.dir}/conf
distribution.jboss.groovy.dir=${distribution.jboss.main.dir}/groovy
distribution.jboss.external-configuration.dir=${distribution.jboss.main.dir}/external-configuration
distribution.jboss.registration-forms.dir=${distribution.jboss.main.dir}/registration-forms
distribution.jboss.bank-account-documents.dir=${distribution.jboss.main.dir}/bank-account-documents
distribution.jboss.email-documents.dir=${distribution.jboss.main.dir}/email-documents

# want to see all the compiler warnings? set this to blank rather than ":none"
javac.xlint=

# configuration folders for database specific configurations.
datbase.dir=${basedir}/database

# configuration folders reference.
external-configuration.dir=external-configuration

jboss.deploy.dir=jboss/deploy
jboss.conf.dir=jboss/conf

registration-forms.dir=registration-forms
email-documents.dir=email-documents
bank-account-documents.dir=bank-account-documents

# jboss settings, you need to define at least jboss.install.root
jboss.server.name=production
jboss.server.root = ${jboss.install.root}/server/${jboss.server.name}
jboss.server.deploy.root = ${jboss.server.root}/deploy
jboss.root=${jboss.server.root}
jboss.hostname=127.0.0.1
jboss.port=8080
jboss.port.https=8443
jboss.url=http://${jboss.hostname}:${jboss.port}
jboss.url.https=http://${jboss.hostname}:${jboss.port.https}
jboss.shared.url=${jboss.url}
jboss.rmi.port=1099
jboss.jmx.username=admin
jboss.jmx.password=admin
jboss.jmx.authenticate=false
jboss.jmx.ssl=false
jboss.jmx.port=6450
jboss.jmx.url=http://${jboss.hostname}:${jboss.port}/jmx-console/
jboss.jnp.url=jnp://${jboss.hostname}:${jboss.rmi.port}
jboss.jdwp.port=8000
jboss.archive.dir=${java.io.tmpdir}
jboss.local.deploy.dir=${jboss.server.deploy.root}
jboss.server.zip.file=${user.home}/jboss-${jboss.server.name}.zip
jboss.archive.keep=false
jboss.partition.name=${user.name}DefaultPartition
jboss.partition.udpGroup=228.1.2.3
jboss.hapartition.mcast_port=45566
jboss.jvmarg.maxheap=512m
jboss.jvmarg.minheap=56m
jboss.jvmarg.maxpermsize=128m
jboss.log.tail.numLines=500
jboss.deploy.timeout=240
jboss.undeploy.timeout=60
jboss.startup.timeout=420
jboss.shutdown.timeout=120
jboss.ws.http.dump=true
jboss.shutdown.forceHalt=false
jboss.bind.interface=0.0.0.0

mysql.host=127.0.0.1
mysql.port=3306
mysql.url=jdbc:mysql://${mysql.host}:${mysql.port}
mysql.root.username=root
mysql.root.password=root
mysql.database.keep=true

gretna.solr.solr.home=${jboss.server.root}/conf/solr
gretna.solr.data.dir=${jboss.server.root}/work/gretna.solr

# If you want to skip tests or various analysers set these to true. 
# leaving them undefined is the same as setting them to 'false'
# skip.tests=false
# skip.checkstyle=false
# skip.cobertura=false
# skip.javadoc=false
# skip.findbugs=false
# skip.its=false
skip.selenium = true
# skip.webdriver = false

##########################################
# Common services
##########################################

# secure data wsdl configuration.
securedata.url=${jboss.shared.url}/secure-data-ws/securedata
securedata.wsdl.location.web = ${securedata.url}?wsdl

# key management wsdl configuration.
keymanagement.url=${jboss.shared.url}/key-management-ws/keyserver
keymanagement.wsdl.location.web = ${keymanagement.url}?wsdl

# address lookup wsdl configuration
addresslookup.url = ${jboss.shared.url}/address-lookup-ws/addresslookup
addresslookup.wsdl.location.web = ${addresslookup.url}?wsdl

# bank validation wsdl configuration.
bankaccountvalidation.url=${jboss.shared.url}/bankaccount-validation-ws/bankvalidator
bankaccountvalidation.wsdl.location.web = ${bankaccountvalidation.url}?wsdl

# GLIS service, needed by batch
glis.url=${jboss.url}/glis-ws/glis
glis.wsdl.location.web=${glis.url}?wsdl

# Replace below URL to point to Virgin Money Giving web site domain URL. Example : vmg.website.url=http://www.virginmoneygiving.com
vmg.website.url=http://localhost:8080/


##########################################
# Giving DB
##########################################

# giving db name and built location 
givingdb.jar.name = giving-db.jar
givingdb.jar.location = ${gretna.root.dir}/giving-db/deploy
givingdb.jar.file = ${givingdb.jar.location}/${givingdb.jar.name}

# The giving datasource file will be filtered with these settings during deployment
givingdb.ds.dbname=giving
givingdb.ds.username=giving
givingdb.ds.password=giving
givingdb.ds.url=${mysql.url}/${givingdb.ds.dbname}


##########################################
# Payment DB
##########################################

# payment db name and built location 
paymentdb.jar.name = payment-db.jar
paymentdb.jar.location = ${gretna.root.dir}/payment-db/deploy

# The payment datasource file will be filtered with these settings during deployment
paymentdb.ds.dbname=payment
paymentdb.ds.username=payment
paymentdb.ds.password=payment
paymentdb.ds.url=${mysql.url}/${paymentdb.ds.dbname}


##########################################
# Online Card Payment DB defaults
##########################################

# online card payment wsdl location
onlinecardpayment.url=${jboss.url}/online-card-payment-ws/onlineCardPayment
onlinecardpayment.wsdl.location = ${gretna.root.dir}/online-card-payment-ws/conf/wsdl/online-card-payment-ws.wsdl
onlinecardpayment.wsdl.location.web = ${onlinecardpayment.url}?wsdl

onlinecardpayment.jar.name = online-card-payment-ws-client.jar
onlinecardpayment.jar.location = ${gretna.root.dir}/online-card-payment-ws/deploy
onlinecardpayment.jar.file = ${onlinecardpayment.jar.location}/${onlinecardpayment.jar.name}

onlinecardpayment.ds.username=cardpayment
onlinecardpayment.ds.password=cardpayment
onlinecardpayment.ds.dbname=cardpayment
onlinecardpayment.ds.url=${mysql.url}/${onlinecardpayment.ds.dbname}

# OCP external properties
threed.donation.good.url=http://localhost:8080/fundraiser-web/donate/donationPayment3DSGood.action
threed.donation.bad.url=http://localhost:8080/fundraiser-web/donate/donationPayment3DSBad.action
threed.eventreg.good.url=http://localhost:8080/fundraiser-web/fundraiser/payment3DSGood.action
threed.eventreg.bad.url=http://localhost:8080/fundraiser-web/fundraiser/payment3DSBad.action


##########################################
# Indexer service and client
##########################################

# indexer service wsdl location
indexerservice.url=${jboss.url}/indexer-service/indexerService
indexerservice.wsdl.location.web=${indexerservice.url}?wsdl
indexerservice.wsdl.location=${gretna.root.dir}/indexer-service/conf/wsdl/indexer-service.wsdl

# indexer-service-client 
indexerserviceclient.jar.name = indexer-service-client.jar
indexerserviceclient.jar.location = ${gretna.root.dir}/indexer-service-client/deploy
indexerserviceclient.jar.file = ${indexerserviceclient.jar.location}/${indexerserviceclient.jar.name}


##########################################
# Scheduler Service
##########################################

# The quartz datasource file will be filtered with these settings during deployment
scheduler.ds.dbname=quartz
scheduler.ds.username=quartz
scheduler.ds.password=quartz
scheduler.ds.url=${mysql.url}/${scheduler.ds.dbname}


##########################################
# GLIS DB defaults
##########################################

glis.ds.username=glis
glis.ds.password=glis
glis.ds.dbname=glis
glis.ds.url=${mysql.url}/${glis.ds.dbname}


##########################################
# Security Service
##########################################

# security wsdl locations, one local, one deployed
security.url=${jboss.url}/security-ws/security-service
security.wsdl.location = ${gretna.root.dir}/security-ws/conf/wsdl/security-service.wsdl
security.wsdl.location.web = ${security.url}?wsdl

# Security service DB defaults
security.ds.username=security
security.ds.password=security
security.ds.dbname=security
security.ds.url=${mysql.url}/${security.ds.dbname}

security.jar.name = security-ws-client.jar
security.jar.location = ${gretna.root.dir}/security-ws/deploy
security.jar.file = ${security.jar.location}/${security.jar.name}


##########################################
# CAS Client Signout defaults
##########################################

# cas signout client name and built location 
cassignoutclient.jar.name = cas-signout-client.jar
cassignoutclient.jar.location = ${gretna.root.dir}/cas-client-signout/deploy
cassignoutclient.jar.file = ${cassignoutclient.jar.location}/${cassignoutclient.jar.name}


##########################################
# Template Email Service
##########################################

# template service XSD
templateemail.xsd.location = ${gretna.root.dir}/template-email-service/conf/wsdl/template-email-service.xsd
templateemail.jar.name = template-email-service-client.jar
templateemail.jar.location = ${gretna.root.dir}/template-email-service/deploy
templateemail.jar.file =${templateemail.jar.location}/${templateemail.jar.name}


##########################################
# Alert Service 
##########################################

# alert service wsdl
alertservice.url=${jboss.url}/alert-service-ws/alertService
alertservice.wsdl.location=${gretna.root.dir}/alert-service/conf/wsdl/alert-service.wsdl
alertservice.wsdl.location.web=${alertservice.url}?wsdl
alertservice.jar.name = alert-service-ws-client.jar
alertservice.jar.location = ${gretna.root.dir}/alert-service/deploy
alertservice.jar.file = ${alertservice.jar.location}/${alertservice.jar.name}


##########################################
# Payment Management
##########################################

# payment management wsdl locations, one local, one deployed
paymentmanagement.url=${jboss.url}/payment-management-ws/paymentManagement
paymentmanagement.wsdl.location=${gretna.root.dir}/payment-management-ws/conf/main/wsdl/payment-management-ws.wsdl
paymentmanagement.wsdl.location.web=${paymentmanagement.url}?wsdl
paymentmanagement.jar.name = payment-management-ws-client.jar
paymentmanagement.jar.location = ${gretna.root.dir}/payment-management-ws/deploy
paymentmanagement.jar.file = ${paymentmanagement.jar.location}/${paymentmanagement.jar.name}


##########################################
# Giving Management
##########################################

# giving management wsdl locations, one local, one deployed
givingmanagement.url=${jboss.url}/giving-management-ws/givingManagement
givingmanagement.wsdl.location = ${gretna.root.dir}/giving-management-ws/conf/main/wsdl/giving-management-ws.wsdl
givingmanagement.wsdl.location.web = ${givingmanagement.url}?wsdl
givingmanagement.jar.name = giving-management-ws-client.jar
givingmanagement.jar.location = ${gretna.root.dir}/giving-management-ws/deploy
givingmanagement.jar.file = ${givingmanagement.jar.location}/${givingmanagement.jar.name}


##########################################
# Giving DB Assimilator (Spring Security)
##########################################

# batch assimilator name and built location
batchassimilator.jar.name = giving-batch-assimilator.jar
batchassimilator.jar.location = ${gretna.root.dir}/giving-batch-assimilator/deploy


##########################################
# Giving Batch Extension DB
##########################################

# giving-batch-ext db name and built location 
givingbatchextdb.jar.name = giving-batch-ext-db.jar
givingbatchextdb.jar.location = ${gretna.root.dir}/giving-batch-ext-db/deploy
givingbatchextdb.jar.file = ${givingbatchextdb.jar.location}/${givingbatchextdb.jar.name}

# The giving-batch-ext datasource file will be filtered with these settings during deployment
givingbatchextdb.ds.dbname=batch
givingbatchextdb.ds.username=batch
givingbatchextdb.ds.password=batch
givingbatchextdb.ds.url=${mysql.url}/${givingbatchextdb.ds.dbname}


##########################################
# Giving Batch Extension Management
##########################################

# giving batch extension management wsdl locations, one local, one deployed
givingbatchextmanagement.url=${jboss.url}/giving-batch-ext-management-ws/givingBatchExtManagement
givingbatchextmanagement.wsdl.location = ${gretna.root.dir}/giving-batch-ext-management-ws/conf/main/wsdl/giving-batch-ext-management-ws.wsdl
givingbatchextmanagement.wsdl.location.web = ${givingbatchextmanagement.url}?wsdl
givingbatchextmanagement.jar.name = giving-batch-ext-management-ws-client.jar
givingbatchextmanagement.jar.location = ${gretna.root.dir}/giving-batch-ext-management-ws/deploy
givingbatchextmanagement.jar.file = ${givingbatchextmanagement.jar.location}/${givingbatchextmanagement.jar.name}


##########################################
# Gretna LDAP 
##########################################

# Reference to vmg-ldap.jar file
vmgldap.jar.location=${gretna.root.dir}/vmg-ldap/deploy
vmgldap.jar.name=vmg-ldap.jar
vmgldap.jar.file = ${vmgldap.jar.location}/${vmgldap.jar.name}


##########################################
# Gretna Commons 
##########################################

# Reference to vmg-commons.jar file
vmgcommons.jar.location=${gretna.root.dir}/vmg-commons/deploy
vmgcommons.jar.name=vmg-commons.jar
vmgcommons.jar.file=${vmgcommons.jar.location}/${vmgcommons.jar.name}

# Reference to vmg-web-commons.jar file
vmgwebcommons.jar.location=${gretna.root.dir}/vmg-web-commons/deploy
vmgwebcommons.jar.name=vmg-web-commons.jar
vmgwebcommons.jar.file=${vmgwebcommons.jar.location}/${vmgwebcommons.jar.name}


##########################################
# Business Activity Monitoring client
##########################################

# Reference to bam-service-client.jar file
bamserviceclient.jar.location = ${gretna.root.dir}/bam-service-client/deploy
bamserviceclient.jar.name = bam-service-client.jar
bamserviceclient.jar.file = ${bamserviceclient.jar.location}/${bamserviceclient.jar.name}


##########################################
# User Alerts Service
##########################################

# user-alerts-service xsd
user-alerts-service.xsd.location=${gretna.root.dir}/user-alerts-service/conf/wsdl/user-alerts.xsd

# user-alerts-service-client
useralertsservice.jar.name=user-alerts-service-client.jar
useralertsservice.jar.location=${gretna.root.dir}/user-alerts-service-client/deploy
useralertsservice.jar.file=${useralertsservice.jar.location}/${useralertsservice.jar.name}



##########################################
# SugarCRM Integration Service
##########################################

# sugar-crm.xsd
sugarcrm-service.xsd.location=${gretna.root.dir}/sugarcrm-service/conf/wsdl/sugar-crm.xsd

# sugarcrm-service-client
sugarcrm.client.jar.name=sugarcrm-service-client.jar
sugarcrm.client.jar.location=${gretna.root.dir}/sugarcrm-service-client/deploy
sugarcrm.client.jar.file=${sugarcrm.client.jar.location}/${sugarcrm.client.jar.name}

# SugarCRM wsdl configuration.
sugarcrm.url=http://crm.test.giving.unix.vmoney.local/soap.php
sugarcrm.wsdl.location.web = ${sugarcrm.url}?wsdl
sugarcrm.wsdl.location = ${gretna.root.dir}/sugarcrm-service/conf/wsdl/sugar-crm-soap-service.wsdl


#####################################################
# Selenium RC defaults for running integration tests 
####################################################

selenium.rc.server.timeout=30
selenium.rc.server.port=5555
selenium.rc.server.log=selenium-server.log
selenium.rc.server.host=localhost
selenium.rc.server.url=http://${selenium.rc.server.host}:${selenium.rc.server.port}
selenium.user.extensions=${basedir}/conf/selenium/user-extensions.js


##########################################
# LDAP properties
##########################################

ldap.url=ldap://fisher.opsera.com:389
ldap.base=dc=wintest,dc=opsera,dc=com
ldap.adminName=cn=gretnabind,ou=giving,dc=wintest,dc=opsera,dc=com
ldap.adminPassword=chooChoh7aeD
ldap.giving.userbasedn=ou=giving
ldap.giving.userbasednfilter=cn={0},ou=giving
ldap.giving.default.group=GRETNA


##########################################
# Document locations
##########################################

eventlogo.upload.folder=/tmp/gretna/logos/
eventlogo.temp.folder=/tmp/gretna/logos/
charitylogo.upload.folder=/tmp/gretna/logos/
charitylogo.temp.folder=/tmp/gretna/logos/
forms.folder=/tmp/gretna/forms/
fundraiser.image.baseImageLocation=/tmp/gretna/logos/
emailAttachmentFormLocation.path=/home/email-documents/


##########################################
# Distribution Assets directory locations.
##########################################
distribution.apache.frontend.dir=${distribution.dir}/apache/frontend
distribution.apache.backend.dir=${distribution.dir}/apache/backend


##########################################
# CAS-EXTERNAL DB defaults
##########################################

casexternal.ds.username=cas
casexternal.ds.password=cas
casexternal.ds.dbname=cas
casexternal.ds.url=${mysql.url}/${casexternal.ds.dbname}


##########################################
# CAS-INTERNAL DB defaults
##########################################

casinternal.ds.username=casinternal
casinternal.ds.password=casinternal
casinternal.ds.dbname=casinternal
casinternal.ds.url=${mysql.url}/${casinternal.ds.dbname}


##########################################
# Charity Dashboard DB
##########################################

charitydash.ds.dbname=vmg_reporting
charitydash.ds.username=charitydash
charitydash.ds.password=charitydash
charitydash.ds.url=${mysql.url}/${charitydash.ds.dbname}


##########################################
# Profane DB
##########################################

# Profane db name and built location 
profanityservice.jar.name = profanity-service.jar
profanityservice.jar.location = ${gretna.root.dir}/profanity-service/deploy
profanityservice.jar.file = ${profanityservice.jar.location}/${profanityservice.jar.name}

profanityservice.ds.dbname=profanity
profanityservice.ds.username=profanity
profanityservice.ds.password=profanity
profanityservice.ds.url=${mysql.url}/${profanityservice.ds.dbname}
