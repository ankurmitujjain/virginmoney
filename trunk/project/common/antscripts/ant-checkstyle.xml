<?xml version="1.0"?>
<project name="ant-checkstyle" default="checkstyle">

    <!--

    
    Standard Ant task to run checkstyle for Virgin Money projects
    =============================================================

    Function
    ========

        This script runs checkstyle against the 'main' source trees, and excludes all test code and code generated by wsimport.
        wsimport etc.

        It is configurable, however if you need to do something significantly different it is recommended that you do not use this script 
        and create your own version instead.



    To use this script
    ==================

        1. include the file common.build.properties from this folder into your local build file (see
           the common.build.properties file for details on how to do this). 
           
           This will import standard definitions for all properties needed, including the ${antscripts.dir} referenced below


        2. create a task in your own ant buildscript like this :-

            <target name="checkstyle" description="Runs checkstyle over the source to check the coding standards">
                 <ant antfile="${antscripts.dir}/ant-checkstyle.xml" inheritall="true" inheritrefs="true" />
            </target>


    Optional parameters
    ===================

         1. Fileset to execute
             It is possible to use a different fileset for testing, by defining one in your build.xml and then
                  set property checkstyle-execute-fileset-id to contain its name e.g

                    <fileset id="checkstyle-project-fileset" dir="${src.main.dir}">
                        <include name="**/*.java/">
                        <exclude name="**/*Ignore*.java"/>
                    </fileset>
                    <property name="checkstyle-execute-fileset-id"  value="checkstyle-project-fileset"/>


               you MUST call the property "checkstyle-execute-fileset-id" otherwise it wont work

    -->

    <!--  re-include the common properties file as it reduces undefined property problems in Intellij
          the only side-effect is that properties will only be overriden if they are specified inside the ant task, ie
          <ant antfile=""><property name="" value=""></ant>
     -->
    <property file="common.build.properties"/>

		<!-- default checkstyle config -->	
		<property name="checkstyle.configuration" value="${checkstyle.dir}/virgin_checks.xml"/>
		

    <path id="checkstyle.classpath">
        <fileset dir="${checkstyle.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- Task definition - the properties file is in the checkstyle jar file -->
    <taskdef resource="checkstyletask.properties" classpathref="checkstyle.classpath" />


    <fileset id="checkstyle-default-fileset" dir="${src.dir}"  >
            <!--define the default fileset to be analysed
            DO NOT CHANGE THIS WITHOUT GOOD REASON - If you need to user a different fileset create one IN YOUR OWN
            build.xml and set property checkstyle-execute-fileset-id to contain its name e.g

                    <fileset id="checkstyle-project-fileset" dir="${src.main.dir}">
                        <include name="**/*.java/">
                        <exclude name="**/*Ignore*.java"/>
                    </fileset>
                    <target name="mytarget">
                         <ant antfile="${antscripts.dir}/ant-checkstyle.xml" inheritall="true" inheritrefs="true" >
                            <property name="checkstyle-execute-fileset-id"  value="checkstyle-project-fileset"/>
                        </ant>
                    </target>
            -->

            <exclude name="generated/**/*.java"  />            <!-- ignore generated code -->
            <exclude name="service_gen/**/*.java"/>            <!-- ignore generated code -->
            <exclude name="client_gen/**/*.java" />             <!-- ignore generated code -->
     </fileset>


    <!--names the fileset to be used in the tests - this can be overridden in the calling script -->
    <property name="checkstyle-execute-fileset-id"  value="checkstyle-default-fileset"/>


    <target name="checkstyle" description="Runs checkstyle over the source to check the coding standards">
         <!-- Do some clean up -->
         <delete dir="${checkstyle.results.dir}" />
         <mkdir dir="${checkstyle.results.dir}" />
         <mkdir dir="${checkstyle.xml.dir}" />

        <echo message="ant-checkstyle.xml : checkstyle.results.dir=${checkstyle.results.dir}"/>
        <echo message="ant-checkstyle.xml :     checkstyle.xml.dir=${checkstyle.xml.dir}"/>


         <!-- Run checkstyle over all src code using virgin_checks -->
         <checkstyle config="${checkstyle.configuration}"
                     failureProperty="checkstyle.failure"
                     failOnViolation="false">
             <fileset refid="${checkstyle-execute-fileset-id}" />

             <formatter type="xml" toFile="${checkstyle.results.dir}/xml/checkstyle_report.xml" />
         </checkstyle>

         <!-- Transform the generated file into something pretty style attribute refers to the transformation
              to run over it (there's others to choose from if you want) -->
         <xslt destdir="${checkstyle.results.dir}"
               basedir="${checkstyle.xml.dir}"
               in="${checkstyle.xml.dir}/checkstyle_report.xml"
               style="${checkstyle.dir}/checkstyle-frames.xsl">

             <!-- Have to specify this parameter so that generated html is dumped where requested -->
             <param name="output.dir" expression="${checkstyle.results.dir}" />
         </xslt>

        <echo message="ant-checkstyle.xml :     finished"/>

     </target>

</project>