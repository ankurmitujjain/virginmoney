# Initial delay in seconds before we begin scheduling at server startup
scheduler.quartz.startupDelay=5

# Tell scheduler to wait for jobs to complete
scheduler.quartz.waitForJobsToCompleteOnShutdown=true

# Thread pool size
scheduler.quartz.threadPool.threadCount=2
scheduler.quartz.threadPool.threadPriority=5

# The DataSource JNDI location
scheduler.quartz.jobStore.dataSource.jndiName=java:/VmgQuartzDS

# cluster mode?
scheduler.quartz.jobStore.isClustered=false

# Depending on the exact type of DataSource being used comment or uncomment the following...
# Hypersonic specific settings
#scheduler.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.HSQLDBDelegate
#scheduler.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?

# MySQL specific JobStore settings
scheduler.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
scheduler.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE

# Connection factory for JMS JNDI name
scheduler.jms.connectionFactory.jndiName=java:/ConnectionFactory

# Batch job service request JMS destination JNDI names
scheduler.jms.givingBatchJobsDestination.jndiName=queue/givingBatchJobServiceQueue
scheduler.jms.paymentBatchJobsDestination.jndiName=queue/paymentBatchJobServiceQueue

# The jobs initial schedule settings, as defined by Quartz 'cron' expressions 
scheduler.trigger.bacCashBackTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.bacRegistrationTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.generalLedgerCharityUpdateTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.generalLedgerCharityRegistrationTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.generalLedgerPaymentsReceivedTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.generalLedgerCashFeedsTrigger.cronExpression=*/10 * * * * ?
scheduler.trigger.regularCardPaymentsTrigger.cronExpression=*/10 * * * * ?
#HunarC: Added this for the overnight batch job
scheduler.trigger.overnightBatchJobTrigger.cronExpression=0 5 0 * * ? *

# Alert service URL
alertservice.url.system.property=http://localhost:8080/alert-service-ws/alertService
