<?xml version="1.0" encoding="UTF-8"?>
    <flow xmlns="http://www.springframework.org/schema/webflow"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="
              http://www.springframework.org/schema/webflow
              http://www.springframework.org/schema/webflow/spring-webflow-1.0.xsd">


	<start-state idref="initialFlowSetup"  />

	<action-state id="initialFlowSetup">
	   <action bean="initialFlowSetupAction" />
	   <transition on="success" to="ticketGrantingTicketExistsCheck" />
    </action-state>

    <decision-state id="ticketGrantingTicketExistsCheck">
       <if test="${flowScope.ticketGrantingTicketId != null}" then="hasServiceCheck" else="gatewayRequestCheck" />
    </decision-state>

    <decision-state id="gatewayRequestCheck">
    	<!-- Ankur: Replaced this by the test below, to cater for passthru logins.
        <if test="${externalContext.requestParameterMap['gateway'] != '' &amp;&amp; externalContext.requestParameterMap['gateway'] != null &amp;&amp; flowScope.service != null}" then="redirect" else="vmgcasLoginViewJDisable" />
        -->
        <if test="${externalContext.requestParameterMap['gateway'] != '' &amp;&amp; externalContext.requestParameterMap['gateway']
              != null &amp;&amp; flowScope.service != null}" then="redirect" else="passThruLoginCheck" />
    </decision-state>

    <decision-state id="passThruLoginCheck">
        <if test="${externalContext.requestParameterMap['accountId'] != '' &amp;&amp; externalContext.requestParameterMap['accountId'] != null}" then="passThrough" else="opsPassThruLoginCheck" />
    </decision-state>

    <decision-state id="opsPassThruLoginCheck">
        <if test="${externalContext.requestParameterMap['opsAccountId'] != '' &amp;&amp; externalContext.requestParameterMap['opsAccountId'] != null}" then="opsPassThrough" else="vmgcasLoginViewJDisable" />
    </decision-state>


	<decision-state id="hasServiceCheck">
		<if test="${flowScope.service != null}" then="renewRequestCheck" else="viewGenericLoginSuccess" />
	</decision-state>

	<decision-state id="renewRequestCheck">
		<if test="${externalContext.requestParameterMap['renew'] != '' &amp;&amp; externalContext.requestParameterMap['renew'] != null}" then="vmgcasLoginViewJDisable" else="generateServiceTicket" />
	</decision-state>

	<!--
		The "warn" action makes the determination of whether to redirect directly to the requested
		service or display the "confirmation" page to go back to the server.
	-->
	<decision-state id="warn">
		<if test="${flowScope.warnCookieValue}" then="showWarningView" else="redirect" />
	</decision-state>

	<!--
	<action-state id="startAuthenticate">
		<action bean="x509Check" />
		<transition on="success" to="sendTicketGrantingTicket" />
		<transition on="error" to="vmgcasLoginViewJDisable" />
	</action-state>
	 -->

	 	<!--
	<view-state id="vmgSessionExpire" view="vmgSessionExpireView" />
 	-->

 	<end-state id="vmgSessionExpire" view="externalRedirect:/vmgSessionExpire"/>

    <!-- Hunar: 01/05/2008 - Add the the following to manage VMG 2-step login process -->

    <!-- Hunar: Manages the ID and date of birth entry -->
	<view-state id="vmgcasLoginViewJDisable" view="vmgcasLoginViewJDisable" >
			<render-actions>
			<action bean="vmgAuthenticationFormActionStep1" method="setupForm"/>
			<action bean="vmgAuthenticationFormActionStep1" method="referenceData"/>
		</render-actions>
		<transition on="submit" to="bindAndValidate" />
	</view-state>

	<!-- Hunar: Binds and Validates the ID and date of birth entry -->
	<action-state id="bindAndValidate">
		<action bean="vmgAuthenticationFormActionStep1" />
		<transition on="success" to="submit" />
		<transition on="error" to="vmgcasLoginViewJDisable" />
	</action-state>

	<view-state id="forcedResetPassword" view="vmgForcedResetPasswordViewJDisable">
		<render-actions>
			<action bean="vmgAuthenticationFormActionStep2" method="setupForm"/>
			<action bean="vmgAuthenticationFormActionStep2" method="referenceData"/>
        	<action bean="vmgforcedResetPassFormAction"  method="displayPasswordStrength" />
        </render-actions>
        <transition on="submit" to="bindAndValidateResetPass" />
    </view-state>

    <action-state id="bindAndValidateResetPass">
		<action bean="vmgforcedResetPassFormAction" method="bindAndValidate" />
		<transition on="success" to="ticketGenerate" />
		<transition on="error" to="forcedResetPassword" />
	</action-state>

	<!-- Hunar: Authenticates the ID and date of birth entry -->
	<action-state id="submit">
		<action bean="vmgAuthenticationFormActionStep1" method="submit" />
		<transition on="warn"    to="warn" />
		<transition on="locked"  to="viewAccountLocked" />
		<transition on="success" to="vmgcasLoginView2JDisable" />
		<transition on="error"   to="vmgcasLoginViewJDisable" />
	</action-state>


	<!-- Hunar: Manages the password characters entry -->
	<view-state id="vmgcasLoginView2JDisable" view="vmgcasLoginView2JDisable">
			<render-actions>
			<action bean="vmgAuthenticationFormActionStep2" method="setupForm"/>
			<action bean="vmgAuthenticationFormActionStep2" method="referenceData"/>
		</render-actions>
		<transition on="submit" to="bindAndValidate2" />
	</view-state>

	<!-- Hunar: Binds and Validates the password characters entry -->
	<action-state id="bindAndValidate2">
		<action bean="vmgAuthenticationFormActionStep2" method="bindAndValidate" />
		<transition on="success" to="submit_step2" />
		<transition on="error" to="vmgcasLoginView2JDisable" />
	</action-state>

	<!-- Hunar: Verifies the password characters entry -->

	<action-state id="submit_step2">
          <action bean="vmgAuthenticationFormActionStep2" method="externalSubmit" />
          <transition on="warn"    to="warn" />
          <transition on="success" to="sendTicketGrantingTicket" />
          <transition on="error"   to="submit_step3" />
    </action-state>

	<!-- To generate ticket call its submit method above will generate ticket if forced reset password condition are not satifisfied-->
    <action-state id="ticketGenerate">
          <action bean="vmgAuthenticationFormActionStep2" method="submit" />
          <transition on="warn"    to="warn" />
          <transition on="success" to="sendTicketGrantingTicket" />
          <transition on="error"   to="submit_step3" />
    </action-state>

    <action-state id="submit_step3">
          <action bean="vmgAuthenticationFormActionStep2" method="identifyTarget" />
          <transition on="lockedVMG"       to="redirectToRequestorView" />
          <transition on="lockedError"     to="redirectToRequestorView" />
          <transition on="tempPwdValid"    to="forcedResetPassword" />
          <transition on="error"           to="vmgcasLoginViewJDisable" />
          <transition on="tempPwdExpired"  to="redirectToRequestorView" />
    </action-state>

    <action-state id="passThrough">
        <action bean="vmgAuthenticationFormActionStep1" method="processPassThru" />
        <transition on="lockedVMG"       to="redirectToRequestorView" />
        <transition on="lockedError"     to="redirectToRequestorView" />
        <transition on="error"           to="vmgcasLoginViewJDisable" />
        <transition on="tempPwdExpired"  to="redirectToRequestorView" />
        <transition on="tempPwdValid"    to="sendTicketGrantingTicket" />
    </action-state>

    <action-state id="opsPassThrough">
        <action bean="vmgAuthenticationFormActionStep1" method="processOpsPassThru" />
        <transition on="lockedVMG"       to="redirectToRequestorView" />
        <transition on="lockedError"     to="redirectToRequestorView" />
        <transition on="error"           to="vmgcasLoginViewJDisable" />
        <transition on="tempPwdExpired"  to="redirectToRequestorView" />
        <transition on="tempPwdValid"    to="sendTicketGrantingTicket" />
    </action-state>




    <!-- Hunar: Redirection if error -->
    <view-state id="redirectToRequestorView" view="vmgRedirectToRequestorViewJDisable">
        <transition on="submit" to="bindAndValidate" />
    </view-state>

    <!-- Hunar: 01/05/2008 - end of VM additions -->

    <action-state id="sendTicketGrantingTicket">
		<action bean="sendTicketGrantingTicketAction" />
		<transition on="success" to="serviceCheck" />
    </action-state>

    <action-state id="vmgRedirectCheck">
          <action bean="vmgAuthenticationFormActionStep2" method="redirectToTarget" />
          <transition on="success"         to="warn" />
          <transition on="tempPwdValid"    to="forcedResetPassword" />
          <transition on="error"           to="vmgcasLoginViewJDisable" />
    </action-state>

    <decision-state id="serviceCheck">
		<if test="${flowScope.service != null}" then="generateServiceTicket" else="viewGenericLoginSuccess" />
	</decision-state>

	<action-state id="generateServiceTicket">
		<action bean="generateServiceTicketAction" />
		<!--<transition on="success" to ="warn" />-->
        <transition on="success" to ="vmgRedirectCheck" />
        <transition on="error" to="vmgSessionExpire" />
		<!--<transition on="gateway" to="redirect" />-->
        <transition on="gateway" to="redirectToRequestorView" />
    </action-state>

	<end-state id="viewAccountLocked" view="vmgcasVMAccountLockedView" />

	<!--
		the "viewGenericLogin" is the end state for when a user attempts to login without coming directly from a service.
		They have only initialized their single-sign on session.
	-->
	<end-state id="viewGenericLoginSuccess" view="vmgcasLoginGenericSuccessView" />

	<!--
		The "showWarningView" end state is the end state for when the user has requested privacy settings (to be "warned") to be turned on.  It delegates to a
		view defines in default_views.properties that display the "Please click here to go to the service." message.
	-->
	<end-state id="showWarningView" view="casLoginConfirmView" />

	<!--
		The "redirect" end state allows CAS to properly end the workflow while still redirecting
		the user back to the service required.
	-->
	<end-state id="redirect" view="bean:dynamicRedirectViewSelector" />

	<end-state id="viewServiceErrorView" view="vmgviewServiceErrorViewJD" />

    <end-state id="viewServiceSsoErrorView" view="vmgviewServiceSsoErrorViewJD" />

	<global-transitions>
		<transition to="viewServiceErrorView" on-exception="org.springframework.webflow.execution.repository.NoSuchFlowExecutionException" />
        <transition to="viewServiceSsoErrorView" on-exception="org.jasig.cas.services.UnauthorizedSsoServiceException" />
		<transition to="viewServiceErrorView" on-exception="org.jasig.cas.services.UnauthorizedServiceException" />
	</global-transitions>
</flow>
