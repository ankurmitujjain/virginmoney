<?xml version="1.0"?>
<project name="ant-qalab" default="qalab">

    <!--

    Standard Ant task to run qalab for Virgin Money projects
    ============================================================
    
     Function
     ========

        This script peforms a default execution of qalab against the 'main' source trees, and excludes all test source code and
        code generated by wsimport.
    
        It is configurable, however if you need to do something significantly different it is recommended that you do not use this script 
        and create your own version instead.


    To use this script
    ==================

        1. include the file common.build.properties from this folder into your local build file (see
           the common.build.properties file for details on how to do this). 
           
           This will import standard definitions for all properties needed, including the ${antscripts.dir} referenced below


        2. create a task in your own ant buildscript like this :-

          <target name="qalab" description="Runs qalab over the source to check the coding standards">
               <ant antfile="${antscripts.dir}/ant-qalab.xml" inheritall="true"   inheritrefs="true"/>
          </target>

     -->
    
    <!--
      re-include the common properties file as it reduces undefined property problems in Intellij
      the only side-effect is that properties will only be overriden if they are specified inside the ant task, ie
      <ant antfile=""><property name="" value=""></ant>
     -->
    <property file="common.build.properties"/>


    <property name="xslt.dir" value="${qalab.lib}" />



    <target name="qalab" depends="qalab-prepare, qalab-stat, qalab-buildchart, qalab-mover" description="Runs all the QA lab stats">
        <echo message="ant-qalab.xml : qalab : finished"/>
    </target>

    <target name="qalab-prepare" description="prepares for qalab">
         <delete dir="${qalab.results.dir}"/>
         <mkdir dir="${qalab.results.dir}"/>
    </target>
    

    <path id="svnant.classpath">
        <fileset dir="${common.library.dir}/antsvn/initial-version">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="qalab.classpath">
        <fileset dir="${qalab.lib}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${log4j.lib}">
            <include name="**/*.jar" />
        </fileset>
    </path>


    <taskdef name="mergestat" classname="net.objectlab.qalab.ant.BuildStatMergeTask" classpathref="qalab.classpath" />
    <taskdef name="buildchart" classname="net.objectlab.qalab.ant.BuildStatChartTask" classpathref="qalab.classpath" />
    <taskdef name="mover" classname="net.objectlab.qalab.ant.BuildStatMoverTask" classpathref="qalab.classpath" />
    <taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpathref="svnant.classpath" />

    <target name="qalab-stat">

        <echo message="ant-qalab.xml : qalab-stat : started"/>
        <echo message="ant-qalab.xml : qalab-stat :           qalab.datafile =${qalab.datafile}"/>
        <echo message="ant-qalab.xml : qalab-stat :        qalab.results.dir =${qalab.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-stat :    cobertura.results.dir =${cobertura.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-stat :   checkstyle.results.dir =${checkstyle.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-stat :             src.main.dir =${src.main.dir}"/>
        <echo message="ant-qalab.xml : qalab-stat :    qalab.properties.file =${qalab.properties.file}"/>

        <svn username="cruise" password="c0ntr0l" javahl="false" javasvn="true">
            <update dir="${qalab.dir}" />
        </svn>
        <tstamp>
            <format property="TIME" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>

        <!-- Merge into datafile for cobertura line -->
        <echo message="ant-qalab.xml : qalab-stat :    Merge into datafile for cobertura line"/>
        <mergestat inputFile="${cobertura.results.dir}/results-xml/coverage.xml"
                   outputFile="${qalab.datafile}"
                   srcDir="${src.main.dir}"
                   handler="net.objectlab.qalab.parser.CoberturaLineStatMerge"
                   mergerTimeStamp="${TIME}"
                   propertiesFile="${qalab.properties.file}" />

        <!-- Merge into datafile for cobertura branch -->
        <echo message="ant-qalab.xml : qalab-stat :    Merge into datafile for cobertura branch"/>
        <mergestat inputFile="${cobertura.results.dir}/results-xml/coverage.xml"
                   outputFile="${qalab.datafile}"
                   srcDir="${src.main.dir}"
                   handler="net.objectlab.qalab.parser.CoberturaBranchStatMerge"
                   mergerTimeStamp="${TIME}"
                   propertiesFile="${qalab.properties.file}" />

        <!-- Merge into datafile for checkstyle -->
        <echo message="ant-qalab.xml : qalab-stat :    Merge into datafile for checkstyle"/>
        <mergestat inputFile="${checkstyle.results.dir}/xml/checkstyle_report.xml"
                   outputFile="${qalab.datafile}"
                   srcDir="${src.main.dir}"
                   handler="net.objectlab.qalab.parser.CheckstyleStatMerge"
                   mergerTimeStamp="${TIME}"
                   propertiesFile="${qalab.properties.file}" />
        <!-- Commit the changed qalab.xml to SVN -->
        <svn username="cruise" password="c0ntr0l" javahl="false" javasvn="true">
            <commit file="${qalab.datafile}" message="Ant: Updated QA Lab file" />
        </svn>

        <echo message="ant-qalab.xml : qalab-stat : finished"/>

    </target>

    <target name="qalab-buildchart" description="Builds the charts from the QA Lab XML file">

        <condition  property="qalab.datafile.exists" value="true" else="false">
            <available file="${qalab.datafile}"/>
        </condition>

        <condition  property="qalab.properties.file.exists" value="true" else="false">
            <available file="${qalab.properties.file}"/>
        </condition>

        <echo message="ant-qalab.xml : qalab-buildchart : started"/>
        <echo message="ant-qalab.xml : qalab-buildchart :           qalab.datafile =${qalab.datafile}   : exists=${qalab.datafile.exists}"/>
        <echo message="ant-qalab.xml : qalab-buildchart :        qalab.results.dir =${qalab.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-buildchart :    cobertura.results.dir =${cobertura.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-buildchart :   checkstyle.results.dir =${checkstyle.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-buildchart :             src.main.dir =${src.main.dir}"/>
        <echo message="ant-qalab.xml : qalab-buildchart :    qalab.properties.file =${qalab.properties.file}  : exists=${qalab.properties.file.exists}"/>

        <echo message="ant-qalab.xml : qalab-buildchart :    started common report"/>
        <buildchart inputFile="${qalab.datafile}"
                    toDir="${qalab.results.dir}"
                    movingAverage="10"
                    width="800"
                    height="600"
                    summaryOnly="true"
                    summaryType="cobertura-line,cobertura-branch,checkstyle"
                    type="cobertura-line,cobertura-branch,checkstyle"
                    quiet="false" />


        <echo message="ant-qalab.xml : qalab-buildchart :    started cobertura report"/>
        <buildchart inputFile="${qalab.datafile}"
                    toDir="${qalab.results.dir}/cobertura"
                    movingAverage="0"
                    width="800"
                    height="600"
                    summaryOnly="true"
                    summaryType="cobertura-line,cobertura-branch"
                    type="cobertura-line,cobertura-branch"
                    quiet="false" />

        <echo message="ant-qalab.xml : qalab-buildchart :    started cobertura report"/>
        <buildchart inputFile="${qalab.datafile}"
                    toDir="${qalab.results.dir}/checkstyle"
                    movingAverage="0"
                    width="800"
                    height="600"
                    summaryOnly="true"
                    summaryType="checkstyle"
                    type="checkstyle"
                    quiet="false" />

        <echo message="ant-qalab.xml : qalab-buildchart : finished"/>

    </target>

    <target name="qalab-mover" description="Builds the mover report">
        <echo message="ant-qalab.xml : qalab-mover : started"/>
        <echo message="ant-qalab.xml : qalab-mover :           qalab.datafile =${qalab.datafile}"/>
        <echo message="ant-qalab.xml : qalab-mover :        qalab.results.dir =${qalab.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-mover :    cobertura.results.dir =${cobertura.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-mover :   checkstyle.results.dir =${checkstyle.results.dir}"/>
        <echo message="ant-qalab.xml : qalab-mover :             src.main.dir =${src.main.dir}"/>
        <echo message="ant-qalab.xml : qalab-mover :    qalab.properties.file =${qalab.properties.file}"/>
        <echo message="ant-qalab.xml : qalab-mover :                 xslt.dir =${xslt.dir}"/>

        <mover inputFile="${qalab.datafile}"
               types="checkstyle,cobertura-line,cobertura-branch"
               startTimeHoursOffset="50"
               weekendAdjustment="true"
               quiet="false"
               outputXMLfile="${qalab.results.dir}/qalab-mover.xml" />
        <style in="${qalab.results.dir}/qalab-mover.xml"
               out="${qalab.results.dir}/movers.html"
               style="${xslt.dir}/qalab-movers-html.xsl">

        </style>

        <echo message="ant-qalab.xml : qalab-mover : finished"/>

    </target>

</project>
